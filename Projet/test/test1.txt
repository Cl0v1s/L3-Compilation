irmovl 0x2ac, %esp
l0:irmovl $5, %eax
rmmovl %eax, 0x17c
l1:mrmovl 0x17c, %eax
rmmovl %eax, 0x180
l2:mrmovl 0x180, %eax
rmmovl %eax, 0x184
l3:mrmovl 0x184, %eax
isubl 0, %eax
je IfFalse1
IfStart2:nop
l5:mrmovl 0x180, %eax
rmmovl %eax, 0x188
l6:irmovl $1, %eax
rmmovl %eax, 0x18c
l7:mrmovl 0x188, %ebx
mrmovl 0x18c, %ecx
isubl 0, %ecx
jge _y86loopcompare0
pushl %ebx
irmovl 0, %ebx
subl %ecx, %ebx
rrmovl %ebx, %ecx
popl %ebx
pushl %ecx
irmovl 0, %ecx
subl %ebx, %ecx
rrmovl %ecx, %ebx
popl %ecx
_y86loopcompare0: irmovl $0, %edx
irmovl $0, %eax
_y86loop0: addl %ebx, %edx
iaddl 1, %eax
pushl %eax
subl %ecx, %eax
popl %eax
jl _y86loop0
rmmovl %edx, 0x190
l8:mrmovl 0x190, %eax
isubl 0, %eax
je IfEnd2
l9:mrmovl 0x180, %eax
rmmovl %eax, 0x194
l10:irmovl $1, %eax
rmmovl %eax, 0x198
l11:mrmovl 0x194, %eax
mrmovl 0x198, %ecx
subl %ecx, %eax
rmmovl %eax, 0x19c
l12:mrmovl 0x19c, %eax
rmmovl %eax, 0x180
l13:jmp IfStart2
IfEnd2:nop
l15:jmp IfEnd1
IfFalse1:nop
l17:irmovl $3, %eax
rmmovl %eax, 0x1a0
l18:mrmovl 0x1a0, %eax
rmmovl %eax, 0x180
IfEnd1:nop
l20:irmovl $5, %eax
rmmovl %eax, 0x1a4
l21:mrmovl 0x1a4, %eax
rmmovl %eax, 0x1a8
